x-logging: &default-logging
  driver: 'json-file'
  options:
    max-size: "50m"
    max-file: 6

x-base: &base
  profiles: [app]
  build:
    context: .
    dockerfile: Swoole.Dockerfile
    args:
      APP_ENV: 'production'
      APP_HOST: '${APP_HOST}'
      WWWUSER: ${HOST_UID:-1000}
      WWWGROUP: ${HOST_GID:-1000}
  image: laravelx/app
  environment:
    WITH_SSR: true
  user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
  ulimits:
    nofile:
      soft: 20000
      hard: 40000
  security_opt:
    - no-new-privileges:true
  volumes:
    - 'db:/var/www/html/db'
    - 'fonts:/var/www/html/storage/fonts'
  ports:
    - '8000:8000'

  labels:
    # Enable Traefik for this container
    - "traefik.enable=true"

    # Main app router (for HTML and app routes)
    - "traefik.http.routers.app.rule=Host(`bastardo.761073128.xyz`)"
    - "traefik.http.routers.app.service=app"
    - "traefik.http.routers.app.middlewares=compress,html-cache"
    - "traefik.http.services.app.loadbalancer.server.port=8000"

    # Compression middleware
    - "traefik.http.middlewares.compress.compress=true"

    # HTML cache middleware
    - "traefik.http.middlewares.html-cache.headers.customResponseHeaders.Cache-Control=public, max-age=3600"

    # Static assets cache middleware
    - "traefik.http.middlewares.static-assets-cache.headers.customResponseHeaders.Cache-Control=public, max-age=31536000, immutable"

    # Static assets router (Vite build assets)
    - "traefik.http.routers.static-assets.rule=Host(`bastardo.761073128.xyz`) && PathPrefix(`/build/assets/`, `/fonts/`)"
    - "traefik.http.routers.static-assets.service=app"
    - "traefik.http.routers.static-assets.middlewares=compress,static-assets-cache"

    - "traefik.http.middlewares.image-cache.headers.customResponseHeaders.Cache-Control=public, max-age=31536000, immutable"

    - "traefik.http.routers.images.rule=Host(`bastardo.761073128.xyz`) && PathPrefix(`/images/`, `/img/`, `/desktop.webp`, `/mobile.webp`)"
    - "traefik.http.routers.images.service=app"
    - "traefik.http.routers.images.middlewares=compress,image-cache"


  logging: *default-logging
  restart: always

services:
  app:
    <<: *base
    healthcheck:
      test: [ "CMD", "curl", "--fail", "localhost:8000/up" ]
      interval: 3s
      retries: 12
      timeout: 5s

volumes:
  db:
    driver: local
  fonts:
    driver: local

